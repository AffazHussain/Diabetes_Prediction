import requests

# Step 1: API Key
API_KEY = "cypqjWs4_tTOKTiAyqj-k-1Tf59JG_OWOiHnw4HNfgAR"

# Step 2: Get token
token_response = requests.post(
    'https://iam.cloud.ibm.com/identity/token',
    data={"apikey": API_KEY, "grant_type": 'urn:ibm:params:oauth:grant-type:apikey'}
)
mltoken = token_response.json()["access_token"]

# Step 3: Headers
headers = {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer ' + mltoken
}

# Step 4: Define the payload
payload_scoring = {
    "input_data": [{
        "fields": [
            "Pregnancies", "Glucose", "BloodPressure", "SkinThickness", "Insulin",
            "BMI", "DiabetesPedigreeFunction", "Age"
        ],
        "values": [
            [1, 89, 76, 34, 37, 31.2, 0.192, 23], [4, 76, 62, 0, 0, 34, 0.391, 25],
            [7, 160, 54, 32, 175, 30.5, 0.588, 39], [4, 146, 92, 0, 0, 31.2, 0.539, 61],
            [5, 124, 74, 0, 0, 34, 0.22, 38], [5, 78, 48, 0, 0, 33.7, 0.654, 25],
            [4, 97, 60, 23, 0, 28.2, 0.443, 22], [4, 99, 76, 15, 51, 23.2, 0.223, 21],
            [0, 162, 76, 56, 100, 53.2, 0.759, 25], [6, 111, 64, 39, 0, 34.2, 0.26, 24],
            [2, 107, 74, 30, 100, 33.6, 0.404, 23], [5, 132, 80, 0, 0, 26.8, 0.186, 69],
            [0, 113, 76, 0, 0, 33.3, 0.278, 23], [1, 88, 30, 42, 99, 55, 0.496, 26],
            [3, 120, 70, 30, 135, 42.9, 0.452, 30], [1, 118, 58, 36, 94, 33.3, 0.261, 23],
            [1, 117, 88, 24, 145, 34.5, 0.403, 40], [0, 105, 84, 0, 0, 27.9, 0.741, 62],
            [4, 173, 70, 14, 168, 29.7, 0.361, 33], [9, 122, 56, 0, 0, 33.3, 1.114, 33],
            [3, 170, 64, 37, 225, 34.5, 0.356, 30], [8, 84, 74, 31, 0, 38.3, 0.457, 39],
            [2, 96, 68, 13, 49, 21.1, 0.647, 26], [2, 125, 60, 20, 140, 33.8, 0.088, 31],
            [0, 100, 70, 26, 50, 30.8, 0.597, 21], [0, 93, 60, 25, 92, 28.7, 0.532, 22],
            [0, 129, 80, 0, 0, 31.2, 0.703, 29], [5, 105, 72, 29, 325, 36.9, 0.159, 28],
            [3, 128, 78, 0, 0, 21.1, 0.268, 55], [5, 106, 82, 30, 0, 39.5, 0.286, 38],
            [2, 108, 52, 26, 63, 32.5, 0.318, 22], [10, 108, 66, 0, 0, 32.4, 0.272, 42],
            [4, 154, 62, 31, 284, 32.8, 0.237, 23], [0, 102, 75, 23, 0, 0, 0.572, 21],
            [9, 57, 80, 37, 0, 32.8, 0.096, 41], [2, 106, 64, 35, 119, 30.5, 1.4, 34],
            [5, 147, 78, 0, 0, 33.7, 0.218, 65], [2, 90, 70, 17, 0, 27.3, 0.085, 22],
            [1, 136, 74, 50, 204, 37.4, 0.399, 24], [4, 114, 65, 0, 0, 21.9, 0.432, 37],
            [9, 156, 86, 28, 155, 34.3, 1.189, 42], [1, 153, 82, 42, 485, 40.6, 0.687, 23],
            [8, 188, 78, 0, 0, 47.9, 0.137, 43], [7, 152, 88, 44, 0, 50, 0.337, 36],
            [2, 99, 52, 15, 94, 24.6, 0.637, 21], [1, 109, 56, 21, 135, 25.2, 0.833, 23],
            [2, 88, 74, 19, 53, 29, 0.229, 22], [17, 163, 72, 41, 114, 40.9, 0.817, 47],
            [4, 151, 90, 38, 0, 29.7, 0.294, 36], [7, 102, 74, 40, 105, 37.2, 0.204, 45],
            [0, 114, 80, 34, 285, 44.2, 0.167, 27], [2, 100, 64, 23, 0, 29.7, 0.368, 21],
            [0, 131, 88, 0, 0, 31.6, 0.743, 32], [6, 104, 74, 18, 156, 29.9, 0.722, 41],
            [3, 148, 66, 25, 0, 32.5, 0.256, 22], [4, 120, 68, 0, 0, 29.6, 0.709, 34],
            [4, 110, 66, 0, 0, 31.9, 0.471, 29], [3, 111, 90, 12, 78, 28.4, 0.495, 29],
            [6, 102, 82, 0, 0, 30.8, 0.18, 36], [6, 134, 70, 23, 130, 35.4, 0.542, 29],
            [2, 87, 0, 23, 0, 28.9, 0.773, 25], [1, 79, 60, 42, 48, 43.5, 0.678, 23],
            [2, 75, 64, 24, 55, 29.7, 0.37, 33], [8, 179, 72, 42, 130, 32.7, 0.719, 36],
            [6, 85, 78, 0, 0, 31.2, 0.382, 42], [0, 129, 110, 46, 130, 67.1, 0.319, 26],
            [2, 81, 72, 15, 76, 30.1, 0.547, 25]
        ]
    }]
}

# Step 5: Send the request to IBM Watson
scoring_url = "https://au-syd.ml.cloud.ibm.com/ml/v4/deployments/diabetes/predictions?version=2021-05-01"
response_scoring = requests.post(scoring_url, json=payload_scoring, headers=headers)

# Step 6: Print predictions
print("Scoring response:")
try:
    print(response_scoring.json())
except ValueError:
    print(response_scoring.text)
except Exception as e:
    print(f"An unexpected error occurred: {e}")